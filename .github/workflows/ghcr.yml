# docker/webもしくはdocker/app以下の更新があったときに、
# それぞれのDockerfileを使ってビルドし直す
# 各イメージについては、以下のベース名を持つ
# docker/web -> ghcr.io/densuke/laravelapp-web
# docker/app -> ghcr.io/densuke/laravelapp-web
# それぞれタグとして、ビルド時のepoch秒を設定する、これは人によりイメージが異なることを防ぐためである

name: image CI
on:
  # ディレクトリdocker/webとdocker/appに変更があったときに実行
  push:
    paths:
      - "docker/web/**"
      - "docker/app/**"
      - ".github/workflows/ghcr.yml"
  # 手動で実行する場合
  workflow_dispatch:

# 新しいワークフロー発動時に古いワークフローを自動キャンセル
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  repo-check:
    runs-on: ubuntu-latest
    steps:
      - name: ソース取得
        uses: actions/checkout@v4
      - name: このリポジトリがphp-devcontainerであることを確認
        run: |
          # このリポジトリの名前を取得する
          repo_name="$(basename "$(pwd)")"
          # このリポジトリの名前がphp-devcontainerであることを確認し、そうでなければエラーを出して停止
          if [ "$repo_name" != "php-devcontainer" ]; then
            echo "このリポジトリはイメージビルド用リポジトリではありません"
            exit 1
          fi
  test:
    runs-on: ubuntu-latest
    needs: repo-check
    permissions:
      # contents: write
      checks: write
      actions: write
      # id-token: write
      # packages: read
    env:
      COMPOSE_FILES: "-f compose.yml -f compose_test.yml -f tests/compose.yml"
    steps:
      - name: ソース取得
        uses: actions/checkout@v4
      # publicディレクトリを事前に作成し、パーミッションを設定
      - name: publicディレクトリ作成と権限設定
        run: |
          mkdir -p public
          chmod -R 777 public
      # tests/compose.ymlを使ってコンテナ達を起動する
      - name: コンテナの起動
        run: docker compose ${COMPOSE_FILES} up --quiet-pull  -d
      # rootユーザーとしてテストを実行する
      - name: テストを実行する
        run: docker compose ${COMPOSE_FILES} exec -u root app make test FILE=./tests/test_web_connect.py
      - name: コンテナの停止
        if: always()
        run: docker compose ${COMPOSE_FILES} down -v --remove-orphans
      - name: テスト通過のフラグをたてておく
        run: echo "test_passed=true" >> "$GITHUB_OUTPUT"

  make-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.epoch.outputs.epochtime }}
    steps:
      - name: 現在時刻のEpoch秒を取得してタグに利用
        id: epoch
        run: echo "epochtime=$(date +%s)" >> "$GITHUB_OUTPUT"

  stop-if-running-on-act:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: actで実行中か確認
        if: ${{ env.ACT }}
        run: |
          echo "actで実行中のため、以降は停止します"
          exit 1

  build-image:
    runs-on: ubuntu-latest
    needs:
      - stop-if-running-on-act
      - make-tag
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        image_name: [web, app]
    steps:
      - name: ソース取得
        uses: actions/checkout@v4
      - name: コンテナレジストリへのログイン
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: メタデータの取得(Docker)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.image_name }}
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}
          tags: |
            ${{ needs.make-tag.outputs.tag }}
            ${{ github.ref_name }}
      - name: Docker Buildxのセットアップ
        uses: docker/setup-buildx-action@v3
      - name: Dockerイメージのビルド
        uses: docker/build-push-action@v6
        with:
          context: docker/${{ matrix.image_name }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          provenance: false
          build-args: --quiet

  # compose.ymlを更新する
  ## compose.ymlのappとwebのイメージを更新します
  update-compose:
    runs-on: ubuntu-latest
    needs:
      - build-image
      - make-tag
    permissions:
      contents: write # リポジトリの内容を変更するために必要
      pull-requests: write # プルリクエスト作成に必要
    steps:
      # ソースを取得する
      - name: ソース取得
        uses: actions/checkout@v4
      # compose.ymlを更新する、
      # appとwebのそれぞれのサービス定義のところにあるimageキーの値を更新する
      # タグ部分はneeds.make-tag.outputs.tagの値を使えばよい
      - name: compose.ymlの更新
        run: |
          sed -i -r -e \
            's|ghcr.io/kd-it/php-devcontainer/web:[0-9]+|ghcr.io/kd-it/php-devcontainer/web:${{ needs.make-tag.outputs.tag }}|' \
              -e \
            's|ghcr.io/kd-it/php-devcontainer/app:[0-9]+|ghcr.io/kd-it/php-devcontainer/app:${{ needs.make-tag.outputs.tag }}|' compose.yml
      - name: プルリクエストの作成
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "タグ更新: ${{ needs.make-tag.outputs.tag }}"
          title: "タグ更新: ${{ needs.make-tag.outputs.tag }}"
          body: "タグを更新しました: ${{ needs.make-tag.outputs.tag }}"
          branch: "update-compose-${{ needs.make-tag.outputs.tag }}"
          base: "main"
          labels: "update-compose"
          reviewers: "densuke"
          assignees: "densuke"
          draft: false
